#!/usr/bin/env python3
import uuid
import argparse

from datetime import datetime

from sylva_algorithm_runner import YamlConfiguration
from sylva_algorithm_runner.repositories import GitHubRepository, DatabaseRepository

configuration = YamlConfiguration("/etc/sylva-algorithm-runner/config.yaml")
database_repository = DatabaseRepository(configuration.get("database"))

parser = argparse.ArgumentParser(description="""Reads configurations from GitHub and create run orders.""")
parser.add_argument("--overrideEnabled", help="runs even if it is disabled in configuration file", action="store_true", default=False)

args = parser.parse_args()

process_id = str(uuid.uuid4())
print("{0} - {1} - START - Getting new algorithm run orders from GitHub repository.".format(datetime.now().isoformat(), process_id))

if (configuration.get("runner")["upgrade-run-orders-enabled"] == True or args.overrideEnabled == True):
    created_count = 0
    run_orders = GitHubRepository(configuration.get("github")).get_current_run_orders()

    for algorithm_run_order in run_orders:
        created = database_repository.add_if_missing(algorithm_run_order)
        created_count += 1 if created else 0
        
    print("{0} - {1} - END - Created {2} new run orders out of {3}.".format(datetime.now().isoformat(), process_id, created_count, len(run_orders)))
    
else:
     print("{0} - {1} - END - Process skipped as upgrade-run-orders-enabled is set to False.".format(datetime.now().isoformat(), process_id))